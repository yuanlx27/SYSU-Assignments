#import "@preview/tablem:0.2.0": *

#set text(
  font: (
    "Libertinus Serif",
    "Noto Serif CJK SC",
  ),
  lang: "zh",
)

= 一、选择题

EACAD

= 二、简答题

== 6

+ 生成来源不同

  - 逻辑地址：由 CPU 在执行程序时生成，也称为虚拟地址，是程序中使用的地址。

  - 物理地址：是内存管理单元将逻辑地址转换后得到的真实内存地址，指向实际的物理内存位置。

+ 地址空间范围不同

  - 逻辑地址：地址范围由程序的地址空间决定，不受物理内存大小限制。

  - 物理地址：地址范围受实际安装的物理内存大小限制，不能超过系统的物理内存容量。

== 7

Physical Address = Base Address + Offset.

+ 0, 430

  430 < 600, valid. Hence PA = 219 + 430 = 649.

+ 1, 10

  10 < 14, valid. Hence PA = 2300 + 10 = 2310.

+ 2, 500

  500 > 100, invalid. This causes a segmentation fault.

+ 3, 400

  400 < 580, valid. Hence PA = 1327 + 400 = 1727.

+ 4, 112

  112 > 96, invalid. This causes a segmentation fault.

== 8

缺页错误（Page Fault）通常在以下两种情况出现：

  + 被访问的页面当前不在主存中

    当进程试图访问一个逻辑地址时，CPU 会利用页表将该地址转换成对应的物理地址。如果页表中的对应项标记该页面“未在内存中”（通常设置为无效位），则会产生缺页错误。

  + 非法访问

    如果进程试图访问一个并不存在或不允许访问的页面（例如越界的地址或无权限页面），也会触发缺页错误。

发生缺页错误时，操作系统通常采取如下操作：

  + 捕捉异常

    当 CPU 检测到一个缺页错误时，会触发一个内核异常或中断，系统进入缺页异常处理程序。

  + 判断原因

    操作系统检查导致缺页错误的页表项，分辨出是有效缺页还是非法访问。

  + 分配页面帧

    如果是有效的缺页错误，操作系统在主存中查找空闲的页面帧。如果没有空闲帧，还可能调用页替换算法选择一个当前占用的帧将其换出到外存。

  + 从外存调入页面

    操作系统定位对应页面的数据，然后将数据从外存读入到选定的页面帧中。

  + 更新页表

    一旦数据加载完毕，操作系统更新相应的页表项，标记该页面为“有效”，并记录页面所在的物理地址，同时取消缺页状态。

  + 恢复指令

    页面调入并更新页表后，操作系统返回到产生缺页错误的指令处，重新执行该指令，这次由于页面已在内存中，因此访问成功。

== 9

+ LRU (Least Recent Used) Replacement

  #three-line-table[
    | Step | Reference | Page Fault? | Frames (after) |
    |------|-----------|-------------|----------------|
    | 1    |     7     |    Yes (1)  | [7]            |
    | 2    |     2     |    Yes (2)  | [7,2]          |
    | 3    |     3     |    Yes (3)  | [7,2,3]        |
    | 4    |     1     |    Yes (4)  | [2,3,1]        |
    | 5    |     2     |    No       | [3,1,2]        |
    | 6    |     5     |    Yes (5)  | [1,2,5]        |
    | 7    |     3     |    Yes (6)  | [2,5,3]        |
    | 8    |     4     |    Yes (7)  | [5,3,4]        |
    | 9    |     6     |    Yes (8)  | [3,4,6]        |
    | 10   |     7     |    Yes (9)  | [4,6,7]        |
    | 11   |     7     |    No       | [4,6,7]        |
    | 12   |     1     |    Yes (10) | [6,7,1]        |
    | 13   |     0     |    Yes (11) | [7,1,0]        |
    | 14   |     5     |    Yes (12) | [1,0,5]        |
    | 15   |     4     |    Yes (13) | [0,5,4]        |
    | 16   |     6     |    Yes (14) | [5,4,6]        |
    | 17   |     2     |    Yes (15) | [4,6,2]        |
    | 18   |     3     |    Yes (16) | [6,2,3]        |
    | 19   |     0     |    Yes (17) | [2,3,0]        |
    | 20   |     1     |    Yes (18) | [3,0,1]        |
  ]

  Total page faults with LRU Replacement: *18*.

+ FIFO (First In First Out) Replacement

  #three-line-table[
    | Step | Reference | Page Fault? | Frames (after) |
    |------|-----------|-------------|----------------|
    | 1    |     7     |    Yes (1)  | [7]            |
    | 2    |     2     |    Yes (2)  | [7,2]          |
    | 3    |     3     |    Yes (3)  | [7,2,3]        |
    | 4    |     1     |    Yes (4)  | [2,3,1]        |
    | 5    |     2     |    No       | [2,3,1]        |
    | 6    |     5     |    Yes (5)  | [3,1,5]        |
    | 7    |     3     |    No       | [3,1,5]        |
    | 8    |     4     |    Yes (6)  | [1,5,4]        |
    | 9    |     6     |    Yes (7)  | [5,4,6]        |
    | 10   |     7     |    Yes (8)  | [4,6,7]        |
    | 11   |     7     |    No       | [4,6,7]        |
    | 12   |     1     |    Yes (9)  | [6,7,1]        |
    | 13   |     0     |    Yes (10) | [7,1,0]        |
    | 14   |     5     |    Yes (11) | [1,0,5]        |
    | 15   |     4     |    Yes (12) | [0,5,4]        |
    | 16   |     6     |    Yes (13) | [5,4,6]        |
    | 17   |     2     |    Yes (14) | [4,6,2]        |
    | 18   |     3     |    Yes (15) | [6,2,3]        |
    | 19   |     0     |    Yes (16) | [2,3,0]        |
    | 20   |     1     |    Yes (17) | [3,0,1]        |
  ]

  Total page faults with FIFO Replacement: *17*.

+ Optimal Replacement

  For the Optimal (or Clairvoyant) algorithm, at each fault the page that will not be used for the longest period in the future is evicted.

  #three-line-table[
    | Step | Reference | Page Fault? | Frames (after) |
    |------|-----------|-------------|----------------|
    | 1    |     7     |    Yes (1)  | [7]            |
    | 2    |     2     |    Yes (2)  | [7,2]          |
    | 3    |     3     |    Yes (3)  | [7,2,3]        |
    | 4    |     1     |    Yes (4)  | [1,2,3]        |
    | 5    |     2     |    No       | [1,2,3]        |
    | 6    |     5     |    Yes (5)  | [1,5,3]        |
    | 7    |     3     |    No       | [1,5,3]        |
    | 8    |     4     |    Yes (6)  | [1,5,4]        |
    | 9    |     6     |    Yes (7)  | [1,5,6]        |
    | 10   |     7     |    Yes (8)  | [1,5,7]        |
    | 11   |     7     |    No       | [1,5,7]        |
    | 12   |     1     |    No       | [1,5,7]        |
    | 13   |     0     |    Yes (9)  | [1,5,0]        |
    | 14   |     5     |    No       | [1,5,0]        |
    | 15   |     4     |    Yes (10) | [1,4,0]        |
    | 16   |     6     |    Yes (11) | [1,6,0]        |
    | 17   |     2     |    Yes (12) | [1,2,0]        |
    | 18   |     3     |    Yes (13) | [1,3,0]        |
    | 19   |     0     |    No       | [1,3,0]        |
    | 20   |     1     |    No       | [1,3,0]        |
  ]

  Total page faults with Optimal Replacement: *13*.
