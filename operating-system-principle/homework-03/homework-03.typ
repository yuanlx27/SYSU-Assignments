#set text(
	font: "Noto Sans CJK SC",
	lang: "zh",
)

= 一、选择题

CCBDB

= 二、简答题

+ 四个，主程序一个，三个 `fork()` 各一个。

+ 在进程上下文切换过程中，内核主要执行以下动作：
  - 保存当前进程的状态：当当前运行进程需要被挂起时，内核会将其 CPU 寄存器、程序计数器（PC）、堆栈指针等硬件状态保存在该进程的进程控制块（PCB）中，以便以后能够恢复执行。
  - 更新内存管理信息：内核会保存进程有关的内存映射及页表信息，确保切换后能够正确恢复进程的地址空间环境。
  - 切换到新的进程：内核选择一个处于就绪态的进程作为下一个执行任务，并从该进程的 PCB 中加载它之前保存的 CPU 寄存器、程序计数器、堆栈指针等信息。
  - 切换内核栈：为每个进程维护独立的内核栈，内核在切换过程中会调整使用的内核栈地址。
  - 更新调度器信息：内核会更新调度器数据结构，记录进程的状态变化，并可能更新优先级或其他调度相关的信息。

+ ```rs let (A, B, C, D) = (0, 2603, 2603, 2600)```。

+ 匿名管道通常在创建时由父进程传递给子进程，生命周期仅限于父子进程间的数据传输；而命名管道则是一个独立的文件系统对象，可以在不同进程间共享，具有更长的生命周期。命令
  ```sh ps -aux | grep "java"``` 中的管道为匿名管道；若改为 ```sh mkfiro myfifo && ps -aux > myfifo && grep "java" < myfifo``` 则 `myfifo` 为命名管道。

+ `fork()` 会创建一个与父进程几乎完全相同的子进程，子进程将获得父进程地址空间的逻辑副本；`vfork()` 会创建一个与父进程共享地址空间的子进程，允许子进程直接修改父进程的地址空间。`vfork()` 适用于需要在 `fork()` 后立即调用 `exec()` 的场景，可以避免复制父进程的地址空间，从而提高性能；`clone()` 是 Linux 特有的系统调用，允许创建一个与父进程共享部分资源的子进程，通过参数控制具体哪些资源需要复制，哪些资源直接共享。

